# Generated by Django 3.1.6 on 2021-05-16 14:48

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.expressions
import django.utils.timezone
import mainapp.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('patronymic', models.CharField(blank=True, max_length=30, verbose_name='Отчество')),
                ('phone', models.CharField(blank=True, max_length=10, unique=True, validators=[django.core.validators.MinLengthValidator(10), django.core.validators.RegexValidator(message='Поле состоит только из цифр', regex='^\\d+$')], verbose_name='Телефон')),
                ('position', models.CharField(blank=True, choices=[('МЕН', 'Менеджер'), ('ГД', 'Генеральный директор')], max_length=30, null=True, verbose_name='Должность')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='users/', verbose_name='Фото')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('format', models.CharField(choices=[('ВХ', 'Входящий'), ('ИХ', 'Исходящий')], max_length=2, verbose_name='Формат')),
                ('type', models.CharField(choices=[('СФ', 'Счет-фактура'), ('АТ', 'Акт')], max_length=2, verbose_name='Тип')),
                ('date', models.DateField(verbose_name='Дата')),
                ('summ', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Сумма')),
                ('number', models.CharField(max_length=100, verbose_name='Номер')),
                ('doc', models.FileField(upload_to='docs/', validators=[django.core.validators.FileExtensionValidator(['pdf'], code=400, message='Неверный формат'), mainapp.utils.file_size], verbose_name='Файл .pdf')),
            ],
            options={
                'verbose_name': 'Документ',
                'verbose_name_plural': 'Докумены',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('options', models.JSONField(blank=True, editable=False, null=True, verbose_name='Доп')),
                ('adres', models.CharField(max_length=50, verbose_name='Адрес')),
                ('contact', models.CharField(max_length=50, verbose_name='Контакт')),
                ('outdoing_pay_type', models.CharField(choices=[('НАЛ', 'Наличные'), ('БНДС', 'Без ндс'), ('НДС', 'Безнал')], default='НДС', max_length=4, verbose_name='Их. тип расч.')),
                ('outdoing_cost', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Исх. ст.')),
                ('incoming_pay_type', models.CharField(choices=[('НАЛ', 'Наличные'), ('БНДС', 'Без ндс'), ('НДС', 'Безнал')], default='НДС', max_length=4, verbose_name='Вх. тип расч.')),
                ('incoming_cost', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Вх. ст.')),
                ('start_date', models.DateField(verbose_name='Начало')),
                ('end_date', models.DateField(verbose_name='Окончание')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
                'ordering': ['-start_date'],
            },
            bases=(mainapp.utils.ChangeFieldsCleanMixin, mainapp.utils.OptionsMixin, mainapp.utils.ModelVarsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='Наименование')),
                ('phone', models.CharField(max_length=10, unique=True, validators=[django.core.validators.MinLengthValidator(10), django.core.validators.RegexValidator(message='Поле состоит только из цифр', regex='^\\d+$')], verbose_name='Телефон')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='e-mail')),
                ('adres', models.CharField(blank=True, max_length=50, verbose_name='Физический адрес')),
                ('mail_adres', models.CharField(blank=True, max_length=50, verbose_name='Почтовый адрес')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Мен.')),
            ],
            options={
                'verbose_name': 'Контрагент',
                'verbose_name_plural': 'Контрагенты',
            },
            bases=(mainapp.utils.ModelVarsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Raport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(verbose_name='Дата начала')),
                ('end_date', models.DateField(verbose_name='Дата окончания')),
                ('hours_sum', models.PositiveSmallIntegerField(verbose_name='Часов')),
                ('doc', models.FileField(upload_to='raports/', validators=[django.core.validators.FileExtensionValidator(['pdf'], code=400, message='Неверный формат'), mainapp.utils.file_size], verbose_name='Файл .pdf')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='mainapp.order', verbose_name='Заказ')),
            ],
            options={
                'verbose_name': 'Рапорт',
                'verbose_name_plural': 'Рапорты',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='WorkShift',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Дата')),
                ('hours', models.DecimalField(decimal_places=1, default=8, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(24)], verbose_name='Ч')),
                ('options', models.CharField(blank=True, max_length=30, verbose_name='Доп')),
                ('incoming_act', models.ForeignKey(blank=True, limit_choices_to={'format': 'ВХ', 'type': 'АТ'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ws_inc_act', to='mainapp.document', verbose_name='Вх. акт')),
                ('incoming_invoice', models.ForeignKey(blank=True, limit_choices_to={'format': 'ВХ', 'type': 'СФ'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ws_inc_inv', to='mainapp.document', verbose_name='Вх. сч-ф')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.order')),
                ('outdoing_act', models.ForeignKey(blank=True, limit_choices_to={'format': 'ИХ', 'type': 'АТ'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ws_out_act', to='mainapp.document', verbose_name='Их. акт')),
                ('outdoing_invoice', models.ForeignKey(blank=True, limit_choices_to={'format': 'ИХ', 'type': 'СФ'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ws_out_inv', to='mainapp.document', verbose_name='Их. сч-ф')),
                ('raport', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mainapp.raport', verbose_name='Р')),
            ],
            options={
                'verbose_name': 'Смена',
                'verbose_name_plural': 'Смены',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='TransportationTo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveSmallIntegerField(unique=True)),
                ('incoming_pay_type', models.CharField(blank=True, choices=[('НАЛ', 'Наличные'), ('БНДС', 'Без ндс'), ('НДС', 'Безнал')], max_length=4, verbose_name='Тип расч.')),
                ('incoming_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Вх. ст.')),
                ('outdoing_cost', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Исх. ст.')),
                ('carrier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mainapp.partner', verbose_name='Перевозчик')),
                ('content_type', models.ForeignKey(limit_choices_to=models.Q(models.Q(('app_label', 'mainapp'), ('model', 'order')), models.Q(('app_label', 'mainapp'), ('model', 'application')), _connector='OR'), on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype', verbose_name='Заказ/Заявка')),
                ('incoming_act', models.ForeignKey(blank=True, limit_choices_to={'format': 'ВХ', 'type': 'АТ'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trto_inc_act', to='mainapp.document', verbose_name='Вх. акт')),
                ('incoming_invoice', models.ForeignKey(blank=True, limit_choices_to={'format': 'ВХ', 'type': 'СФ'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trto_inc_inv', to='mainapp.document', verbose_name='Вх. сч-ф')),
                ('outdoing_act', models.ForeignKey(blank=True, limit_choices_to={'format': 'ИХ', 'type': 'АТ'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trto_out_act', to='mainapp.document', verbose_name='Их. акт')),
                ('outdoing_invoice', models.ForeignKey(blank=True, limit_choices_to={'format': 'ИХ', 'type': 'СФ'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trto_out_inv', to='mainapp.document', verbose_name='Их. сч-ф')),
                ('raport', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mainapp.raport', verbose_name='Р')),
            ],
            options={
                'verbose_name': 'Доставка',
                'verbose_name_plural': 'Доставки',
            },
            bases=(mainapp.utils.ChangeFieldsCleanMixin, models.Model),
        ),
        migrations.CreateModel(
            name='TransportationOut',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveSmallIntegerField(unique=True)),
                ('incoming_pay_type', models.CharField(blank=True, choices=[('НАЛ', 'Наличные'), ('БНДС', 'Без ндс'), ('НДС', 'Безнал')], max_length=4, verbose_name='Тип расч.')),
                ('incoming_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Вх. ст.')),
                ('outdoing_cost', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Исх. ст.')),
                ('carrier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mainapp.partner', verbose_name='Перевозчик')),
                ('content_type', models.ForeignKey(limit_choices_to=models.Q(models.Q(('app_label', 'mainapp'), ('model', 'order')), models.Q(('app_label', 'mainapp'), ('model', 'application')), _connector='OR'), on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype', verbose_name='Заказ/Заявка')),
                ('incoming_act', models.ForeignKey(blank=True, limit_choices_to={'format': 'ВХ', 'type': 'АТ'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trout_inc_act', to='mainapp.document', verbose_name='Вх. акт')),
                ('incoming_invoice', models.ForeignKey(blank=True, limit_choices_to={'format': 'ВХ', 'type': 'СФ'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trout_inc_inv', to='mainapp.document', verbose_name='Вх. сч-ф')),
                ('outdoing_act', models.ForeignKey(blank=True, limit_choices_to={'format': 'ИХ', 'type': 'АТ'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trout_out_act', to='mainapp.document', verbose_name='Их. акт')),
                ('outdoing_invoice', models.ForeignKey(blank=True, limit_choices_to={'format': 'ИХ', 'type': 'СФ'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trout_out_inv', to='mainapp.document', verbose_name='Их. сч-ф')),
                ('raport', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mainapp.raport', verbose_name='Р')),
            ],
            options={
                'verbose_name': 'Вывоз',
                'verbose_name_plural': 'Вывозы',
            },
            bases=(mainapp.utils.ChangeFieldsCleanMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Имя')),
                ('position', models.CharField(blank=True, max_length=30, verbose_name='Должность')),
                ('phone', models.CharField(max_length=10, unique=True, validators=[django.core.validators.MinLengthValidator(10), django.core.validators.RegexValidator(message='Поле состоит только из цифр', regex='^\\d+$')], verbose_name='Телефон')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='e-mail')),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.partner', verbose_name='Контрагент')),
            ],
            options={
                'verbose_name': 'Контакт',
                'verbose_name_plural': 'Контакты',
            },
        ),
        migrations.AddField(
            model_name='order',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer_ord', to='mainapp.partner', verbose_name='Заказчик'),
        ),
        migrations.AddField(
            model_name='order',
            name='machine_type',
            field=models.ForeignKey(limit_choices_to=models.Q(models.Q(('app_label', 'machines'), ('model', 'shalandadynamic')), models.Q(('app_label', 'machines'), ('model', 'minipogruzchikdynamic')), models.Q(('app_label', 'machines'), ('model', 'samosvaldynamic')), models.Q(('app_label', 'machines'), ('model', 'gusenichnyjekskavatordynamic')), models.Q(('app_label', 'machines'), ('model', 'ekskavatorpogruzchikdynamic')), _connector='OR'), on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype', verbose_name='Тех.'),
        ),
        migrations.AddField(
            model_name='order',
            name='manager',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Мен.'),
        ),
        migrations.AddField(
            model_name='order',
            name='supplier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supplier_ord', to='mainapp.partner', verbose_name='Поставщик'),
        ),
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, editable=False, max_length=30, verbose_name='Название')),
                ('inn', models.CharField(max_length=12, unique=True, validators=[django.core.validators.MinLengthValidator(10), django.core.validators.RegexValidator(message='Поле состоит только из цифр', regex='^\\d+$')], verbose_name='ИНН')),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.partner')),
            ],
            options={
                'verbose_name': 'Юр. лицо',
                'verbose_name_plural': 'Юр. лица',
                'ordering': ['-id'],
            },
        ),
        migrations.AddField(
            model_name='document',
            name='entity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='mainapp.entity', verbose_name='Юр. лицо'),
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('options', models.JSONField(blank=True, editable=False, null=True, verbose_name='Доп')),
                ('adres', models.CharField(max_length=50, verbose_name='Адрес')),
                ('contact', models.CharField(max_length=50, verbose_name='Контакт')),
                ('duration', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(99)], verbose_name='Смен')),
                ('outdoing_pay_type', models.CharField(choices=[('НАЛ', 'Наличные'), ('БНДС', 'Без ндс'), ('НДС', 'Безнал')], default='НДС', max_length=4, verbose_name='Вх. тип расч.')),
                ('outdoing_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Их. стоимость')),
                ('start_date', models.DateField(default=mainapp.utils.tomorow, verbose_name='Дата начала')),
                ('create_date', models.DateField(auto_now_add=True, verbose_name='Дата создания')),
                ('start_time', models.TimeField(default=datetime.time(9, 0), verbose_name='Время начала')),
                ('incoming_pay_type', models.CharField(choices=[('НАЛ', 'Наличные'), ('БНДС', 'Без ндс'), ('НДС', 'Безнал')], default='НДС', max_length=4, verbose_name='Их. тип расч.')),
                ('incoming_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Вх. стоимость')),
                ('comment', models.CharField(blank=True, max_length=100, verbose_name='Комментарий')),
                ('renouncement', models.BooleanField(blank=True, editable=False, null=True, verbose_name='Отказ')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer_app', to='mainapp.partner', verbose_name='Заказчик')),
                ('machine_type', models.ForeignKey(limit_choices_to=models.Q(models.Q(('app_label', 'machines'), ('model', 'shalandadynamic')), models.Q(('app_label', 'machines'), ('model', 'minipogruzchikdynamic')), models.Q(('app_label', 'machines'), ('model', 'samosvaldynamic')), models.Q(('app_label', 'machines'), ('model', 'gusenichnyjekskavatordynamic')), models.Q(('app_label', 'machines'), ('model', 'ekskavatorpogruzchikdynamic')), _connector='OR'), on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype', verbose_name='Техника')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Мен.')),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='supplier_app', to='mainapp.partner', verbose_name='Поставщик')),
            ],
            options={
                'verbose_name': 'Заявка',
                'verbose_name_plural': 'Заявки',
                'ordering': ['-start_date'],
            },
            bases=(mainapp.utils.OptionsMixin, mainapp.utils.ModelVarsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='FullWorkShift',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=(mainapp.utils.ModelVarsMixin, 'mainapp.workshift'),
        ),
        migrations.AddConstraint(
            model_name='workshift',
            constraint=models.UniqueConstraint(fields=('order', 'date'), name='unique_date_for_order'),
        ),
        migrations.AddConstraint(
            model_name='raport',
            constraint=models.CheckConstraint(check=models.Q(end_date__gte=django.db.models.expressions.F('start_date')), name='raport: end_date__gte=start_date'),
        ),
        migrations.AddConstraint(
            model_name='order',
            constraint=models.CheckConstraint(check=models.Q(end_date__gte=django.db.models.expressions.F('start_date')), name='end_date__gte=start_date'),
        ),
        migrations.AddConstraint(
            model_name='document',
            constraint=models.UniqueConstraint(fields=('entity', 'number', 'date', 'format', 'type'), name='unique_document'),
        ),
    ]
